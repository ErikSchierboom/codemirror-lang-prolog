@top Program { term* }



term {
  // Atom
}

// Atom { }
// is a symbol name starting with a lower case letter or guarded by quotes. Examples of atoms include x, red, 'Taco', 'some atom', and 'p(a)'.

// Variable {}
// ting of letters, numbers and underscore characters, and beginning with an upper-case letter or underscore. Variables closely resemble variables in logic in that they are placeholders for arbitrary terms.


@skip { spaces | newline | LineComment | BlockComment }

@skip {} {
  BlockComment { "/*" (blockCommentContent | blockCommentNewline)* blockCommentEnd }
}

@local tokens {
  blockCommentEnd { "*/" }
  blockCommentNewline { "\n" }
  @else blockCommentContent
}

@tokens {
  spaces { @whitespace+ }
  newline { $[\r\n]}
  LineComment { "//" ![\n]* }
}

// https://github.com/lezer-parser/generator/blob/d827142436db3724af4b4dd9162132ca343f34e0/src/node.ts#L303

// expression {
//   Identifier |
//   String |
//   Boolean |
//   Application { "(" expression* ")" }
// }

// @tokens {
//   Identifier { $[a-zA-Z_\-0-9]+ }


//   LineComment { ";" ![\n]* }
//   BlockComment 

//   String { '"' (!["\\] | "\\" _)* '"' }

//   Boolean { "#t" | "#f" }

  

//   space { $[ \t\n\r]+ }

//   "(" ")"
// }

@detectDelim
